#!/usr/bin/env coffee

require 'rc'

require 'shelljs/global'

{ EOL } = require 'os'

{ series } = require 'async'

minimist = require 'minimist'

{ keys } = Object

{ resolve, dirname, sep } = require 'path'

{ parallel } = require 'async'

args = minimist process.argv.slice 2

{ src, dest, filename, link, fields } = args

cwd = pwd()

src ?= "."

src = resolve src

link ?= true

fields ?= ["dependencies", "devDependencies"]

filename ?= "package.json"

regexp = new RegExp "#{src.split(sep).join('\\'+sep)}\\#{sep}([\\w|\\-]+\\#{sep})?#{filename}$"

if typeof dest is "undefined"

  npmrc = require('rc')('npm');

  dest = npmrc.root

packages = {}

dependencies = {}

find(src).map (file) ->

  if not regexp.test file then return null

  folder = dirname file

  file = JSON.parse cat file

  deps = []

  fields.map (field) ->

    deps = deps.concat keys(file?[field] or {})

  deps.map (dependency) ->

    if not test "-e", resolve dest, dependency

      dependencies[dependency] = true

  packages[folder] = deps

installPackages = (done) ->

  pkgs = Object.keys(packages).map (pkg) ->

    (

      (next) ->

        deps = packages[@pkg]

        out = ""

        err = ""

        _exec = exec "cd #{pkg} && npm link #{deps.join ' '} && cd -", { async: true, silent: true }

        _exec.stderr.on "data", (data) ->

          out += data.toString()

        _exec.stdout.on "data", (data) ->

          err += data.toString()

        _exec.stdout.on "end", =>

          console.log "#{@pkg}"

          next null, err + out

    ).bind pkg: pkg

  series pkgs, done

installDependencies = (done) ->

  deps = Object.keys(dependencies).map (dep) ->

    (

      (next) ->

        out = ""

        err = ""

        _exec = exec "npm install -g #{@dep}", { async: true, silent: true }

        _exec.stderr.on "data", (data) ->

          out += data.toString()

        _exec.stdout.on "data", (data) ->

          err += data.toString()

        _exec.stdout.on "end", =>

          console.log "#{@dep}"

          next null, err + out

    ).bind dep: dep

  series deps, done

installDependencies (err, res) ->

  if err then console.log err

  if res then console.log res.join EOL

  installPackages (err, res) ->

    if err then console.log err

    if res then console.log res.join EOL

    console.log "done!"
